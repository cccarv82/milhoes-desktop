name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  WAILS_VERSION: v2.10.1

jobs:
  build:
    strategy:
      matrix:
        build: [
          {name: windows, os: windows-latest, arch: amd64, extension: .exe}
        ]
    
    runs-on: ${{ matrix.build.os }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.WAILS_VERSION }}

    - name: Build App
      run: |
        wails build -platform ${{ matrix.build.os }}/${{ matrix.build.arch }} -ldflags "-X main.version=${{ github.ref_name }}"

    - name: Compress artifacts
      uses: vimtor/action-zip@v1.2
      with:
        files: build/bin/
        dest: milhoes-${{ matrix.build.name }}-${{ matrix.build.arch }}.zip

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: milhoes-${{ matrix.build.name }}-${{ matrix.build.arch }}
        path: milhoes-${{ matrix.build.name }}-${{ matrix.build.arch }}.zip

  create-installer:
    needs: build
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: milhoes-windows-amd64

    - name: Extract artifacts
      run: |
        Expand-Archive -Path milhoes-windows-amd64.zip -DestinationPath ./build/

    - name: Setup Inno Setup
      run: |
        choco install innosetup -y

    - name: Create installer
      run: |
        iscc installer/setup.iss

    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: milhoes-installer
        path: installer/Output/MilhoesSetup.exe

  release:
    needs: [build, create-installer]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          milhoes-windows-amd64/milhoes-windows-amd64.zip
          milhoes-installer/MilhoesSetup.exe
        generate_release_notes: true
        prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 