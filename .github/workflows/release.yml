name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  GO_VERSION: '1.22'

jobs:
  validate:
    name: Pre-Release Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Download Dependencies
      run: go mod download
      
    - name: Run Tests
      run: go test -v ./...
      
    - name: Test Build
      run: go build .
      
    - name: Validation Complete
      run: echo "All pre-release validations passed!"

  release:
    name: GoReleaser
    needs: validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Get Tag Info
      id: tag
      run: |
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
    - name: Validate Tag Format
      run: |
        if [[ ! "${{ steps.tag.outputs.tag }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
          echo "Invalid tag format: ${{ steps.tag.outputs.tag }}"
          echo "Expected format: v1.2.3 or v1.2.3-beta"
          exit 1
        fi
        echo "Valid tag format: ${{ steps.tag.outputs.tag }}"
        
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Release Summary
      run: |
        echo "Release ${{ steps.tag.outputs.tag }} completed successfully!"
        echo "Binaries built for multiple platforms"
        echo "Release notes generated"
        echo "Available at: https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag.outputs.tag }}"

  notify:
    name: Release Complete
    needs: [release]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Get Tag Info
      id: tag
      run: |
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
    - name: Success Message
      run: |
        echo "Release ${{ steps.tag.outputs.tag }} completed successfully!"
        echo "Download: https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag.outputs.tag }}" 